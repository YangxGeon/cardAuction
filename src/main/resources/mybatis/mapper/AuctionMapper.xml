<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cardproject.myapp.dao">

	<!-- test : 모든 경매물품 조회 <select id="selectAllItems" resultType="itemvo"> 
		select * from items </select> -->
	
	<!-- P경매물품 최신순 조회 -->
	<select id="selectItemRecent" resultType="itemdetailvo">
		SELECT
		i.item_id,
		i.user_id,
		i.item_name,
		i.cmt, 
		i.status, 
		i.min_price,
		i.rarity,
		TO_CHAR(i.create_date, 'yyyy-mm-dd hh24:mi:ss') create_date,
		TO_CHAR(i.end_date, 'yyyy-mm-dd hh24:mi:ss') end_date,
		i.trade_type, 
		i.cat,
		i.image1,
		i.image2,
		i.image3,
		i.image4,
		i.image5,
		u.nickname,
		u.user_tier, 
		p.card_id,
		p.card_name,
		p.card_image,
		COALESCE(b.bid_count,0) AS bid_count
		FROM items i 
		JOIN users u ON u.user_id = i.user_id
		LEFT JOIN (
		SELECT item_id,
		COUNT(*) AS bid_count
		FROM biddings
		GROUP BY item_id) b ON i.item_id = b.item_id
		LEFT JOIN pokemon p ON i.p_card_id = p.card_id
		WHERE i.end_date > SYSDATE
		ORDER BY i.create_date DESC
	</select>
	<!-- P경매물품 종료임박순 조회 -->
	<select id="selectItemEnding" resultType="itemdetailvo">
		SELECT
		i.item_id,
		i.user_id,
		i.item_name,
		i.cmt, 
		i.status, 
		i.min_price,
		i.rarity,
		TO_CHAR(i.create_date, 'yyyy-mm-dd hh24:mi:ss') create_date,
		TO_CHAR(i.end_date, 'yyyy-mm-dd hh24:mi:ss') end_date,
		i.trade_type, 
		i.cat,
		i.image1,
		i.image2,
		i.image3,
		i.image4,
		i.image5,
		u.nickname,
		u.user_tier, 
		p.card_id,
		p.card_name,
		p.card_image,
		COALESCE(b.bid_count,0) AS bid_count
		FROM items i 
		JOIN users u ON u.user_id = i.user_id
		LEFT
		JOIN (
		SELECT item_id,
		COUNT(*) AS bid_count
		FROM biddings
		GROUP BY item_id) b ON i.item_id = b.item_id
		LEFT JOIN pokemon p ON
		i.p_card_id = p.card_id
		WHERE i.end_date > SYSDATE
		ORDER BY i.end_date
	</select>
	<!-- P경매물품 참여자많은순 조회 -->
	<select id="selectItemMost" resultType="itemdetailvo">
		SELECT
		i.item_id,
		i.user_id,
		i.item_name,
		i.cmt, 
		i.status, 
		i.min_price,
		i.rarity,
		TO_CHAR(i.create_date, 'yyyy-mm-dd hh24:mi:ss') create_date,
		TO_CHAR(i.end_date, 'yyyy-mm-dd hh24:mi:ss') end_date,
		i.trade_type, 
		i.cat,
		i.image1,
		i.image2,
		i.image3,
		i.image4,
		i.image5,
		u.nickname,
		u.user_tier, 
		p.card_id,
		p.card_name,
		p.card_image,
		COALESCE(b.bid_count,0) AS bid_count
		FROM items i 
		JOIN users u ON u.user_id = i.user_id
		LEFT
		JOIN (
		SELECT item_id,
		COUNT(*) AS bid_count
		FROM biddings
		GROUP BY item_id) b ON i.item_id = b.item_id
		LEFT JOIN pokemon p ON
		i.p_card_id = p.card_id
		WHERE i.end_date > SYSDATE
		ORDER BY b.bid_count DESC
	</select>
	<!-- P경매물품 참여자적은순 조회 -->
	<select id="selectItemLeast" resultType="itemdetailvo">
		SELECT
		i.item_id,
		i.user_id,
		i.item_name,
		i.cmt, 
		i.status, 
		i.min_price,
		i.rarity,
		TO_CHAR(i.create_date, 'yyyy-mm-dd hh24:mi:ss') create_date,
		TO_CHAR(i.end_date, 'yyyy-mm-dd hh24:mi:ss') end_date,
		i.trade_type, 
		i.cat,
		i.image1,
		i.image2,
		i.image3,
		i.image4,
		i.image5,
		u.nickname,
		u.user_tier, 
		p.card_id,
		p.card_name,
		p.card_image,
		COALESCE(b.bid_count,0) AS bid_count
		FROM items i 
		JOIN users u ON u.user_id = i.user_id
		LEFT
		JOIN (
		SELECT item_id,
		COUNT(*) AS bid_count
		FROM biddings
		GROUP BY item_id) b ON i.item_id = b.item_id
		LEFT JOIN pokemon p ON
		i.p_card_id = p.card_id
		WHERE i.end_date > SYSDATE
		ORDER BY b.bid_count 
	</select>
	<!-- 경매물품 하나 detail 조회 -->
	<select id="selectItemOne" parameterType="int"
		resultType="itemdetailvo">
		SELECT i.item_id, i.user_id, i.item_name, i.cmt, i.status,
		i.min_price,
		i.rarity, TO_CHAR(i.create_date, 'yyyy-mm-dd hh24:mi:ss') create_date,
		TO_CHAR(i.end_date, 'yyyy-mm-dd hh24:mi:ss') end_date,
		i.trade_type, i.cat, i.image1, i.image2, i.image3, i.image4, i.image5,
		u.nickname, u.user_tier, p.card_id, p.card_name, p.card_image,
		COALESCE(b.bid_count, 0) AS bid_count
		FROM items i
		JOIN users u ON u.user_id = i.user_id
		LEFT JOIN (
		SELECT item_id, COUNT(*) AS bid_count
		FROM biddings
		GROUP BY item_id
		) b ON i.item_id = b.item_id
		LEFT JOIN pokemon p ON
		i.p_card_id = p.card_id
		WHERE i.item_id = #{item_id}

	</select>

	<!-- 경매물품등록 (items테이블에 Insert) -->
	<insert id="itemInsert" parameterType="itemvo">
		insert into items(item_id, user_id, item_name, cmt, status, min_price,
		rarity, end_date, trade_type, cat, image1, image2, image3, image4,
		image5, d_card_id, p_card_id, y_card_id, s_card_id, o_card_id)
		values (SEQ_ITEMS.NEXTVAL, #{user_id}, #{item_name}, #{cmt}, #{status},
		#{min_price}, #{rarity}, to_date(#{end_date}, 'YYYY-MM-DD
		HH24:MI:SS'), #{trade_type}, #{cat}, #{image1}, #{image2}, #{image3},
		#{image4}, #{image5}, #{d_card_id}, #{p_card_id}, #{y_card_id},
		#{s_card_id}, #{o_card_id})
	</insert>
	<!-- 관심물품 등록 (likes테이블에 Insert) -->
	<insert id="likeInsert" parameterType="likevo">
		insert into likes(user_id,item_id)
		values (#{user_id},#{item_id})
	</insert>
	<!-- 관심물품 삭제 (likes테이블에서 delete) -->
	<delete id="likeDelete" parameterType="map">
		delete from likes where
		user_id=#{user_id} and item_id=#{item_id}
	</delete>
	<!-- 관심물품 상태 확인 -->
	<select id="likeStatus" parameterType="map" resultType="likevo">
		select * from likes where user_id=#{user_id} and item_id=#{item_id}
	</select>
	
	<!-- 입찰 (biddings테이블에 Insert) -->
	<insert id="biddingInsert" parameterType="biddingvo">
		insert into biddings(bid_id,price,user_id,item_id) 
		values(BID_SEQ.NEXTVAL, #{price},#{user_id},#{item_id})
	</insert>
	<!-- 사용자가 동일 물품에 입찰하는지 확인용 -->
	<select id="userBidsForItem" parameterType="map" resultType="biddingvo">
		SELECT *
		FROM biddings 
		WHERE user_id = #{user_id} AND item_id = #{item_id}
	</select>
	<!-- 자신의 물품에 입찰하는지 확인용 -->
	<select id="sellerBidsForItem" parameterType="map" resultType="itemvo">
		select * from items where user_id = #{user_id} and item_id = #{item_id}
	</select>
	<!-- 낙찰(시간확인) -->
	<select id="selectExpiredItem" resultType="itemvo">
		select * from items where end_date &lt; sysdate
	</select>
	<!-- 물품에 해당하는 입찰 조회 -->
	<select id="selectBid" parameterType="int" resultType="biddingvo">
		select * from biddings where item_id = #{item_id}
	</select>
	<!-- 물품에 해당하는 입찰이 낙찰상태인지 조회 -->
	<select id="bidVerification" parameterType="int" resultType="biddingvo">
		select * from biddings where item_id = #{item_id} and is_win = 1
	</select>
	<!-- 입찰중 낙찰된 것 is_win update -->
	<update id="biddingUpdate" parameterType="int">
		update biddings set is_win=1 where price= #{price}
	</update>
	<!-- 낙찰insert -->
	<insert id="tradeInsert" parameterType="tradevo">
		insert into trades(trade_id,user_id,item_id,winning,trade_type,create_date,confirm_date,is_recommend,stage,is_success)
		values (TRADE_SEQ.NEXTVAL, #{user_id},#{item_id},#{winning},#{trade_type},#{create_date},#{confirm_date},#{is_recommend},#{stage},#{is_success})
	</insert>
	<!-- 포켓몬카드 불러오기 -->
	<select id="selectPCard" resultType="pokemonvo">
		select * from pokemon
	</select>
	<!-- 원피스카드 불러오기 -->
	<select id="selectOCard" resultType="onepiecevo">
		select * from onepiece
	</select>
	<!-- 디지몬카드 불러오기 -->
	<select id="selectDCard" resultType="digimonvo">
		select * from digimon
	</select>
	<!-- 유희왕카드 불러오기 -->
	<select id="selectYCard" resultType="yugiohvo">
		select * from yugioh
	</select>
	<!-- 스포츠카드 불러오기 -->
	<select id="selectSCard" resultType="sportvo">
		select * from sports
	</select>
	





</mapper>


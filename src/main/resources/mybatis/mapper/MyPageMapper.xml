<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
<mapper namespace = "com.cardproject.myapp.dao">
	<!-- 내정보 -->
	<select id="selectUserById" parameterType = "string" resultType="uservo">
		SELECT * FROM USERS WHERE USER_ID = #{userid}
	</select>
 	
 	<update id="userUpdate" parameterType="uservo">
		UPDATE USERS
				SET PW = #{password},
					NICKNAME = #{nickname},
					EMAIL = #{email},
					ZIP_CODE = #{zipcode},
					ADDRESS = #{address},
					ADDRESS_DETAIL = #{addressdetail}
				WHERE USER_ID = #{userid}
	</update>

	<update id="userProfileUpdate" parameterType="map">
	    UPDATE USERS
	    SET PROFILE_IMAGES = #{imgpath}
	    WHERE USER_ID = #{userid}
	</update>

	
	<!-- 입찰내역 -->
	<select id="selectAllBids" resultType="biddingresultvo">
		SELECT 
	        b.bid_id,
	        b.price,
	        b.bid_time,
	        b.item_id,
	        TO_CHAR(i.end_date, 'YYYY-MM-DD') AS END_DATE,
	        i.image1,
	        i.item_name,
	        b.is_win
	    FROM 
	        biddings b
	    INNER JOIN 
	        items i
	    ON 
	        b.item_id = i.item_id
		WHERE b.USER_ID = #{userid}
	</select>
	
	<!-- 판매내역 -->
	<select id="selectAllSales" resultType="itemvo">
		SELECT ITEM_ID,    
				USER_ID,    
				ITEM_NAME,  
				CMT,        
				STATUS,     
				MIN_PRICE,  
				RARITY,     
				TO_CHAR(create_date, 'YYYY-MM-DD') AS CREATE_DATE,
    			TO_CHAR(end_date, 'YYYY-MM-DD') AS END_DATE,   
				TRADE_TYPE, 
				CAT,        
				IMAGE1,     
				IMAGE2,     
				IMAGE3,     
				IMAGE4,     
				IMAGE5,     
				D_CARD_ID,  
				P_CARD_ID,  
				Y_CARD_ID,  
				S_CARD_ID,  
				O_CARD_ID   
		FROM ITEMS WHERE USER_ID = #{userid}
	</select>
	
	<!-- 포인트 -->
	<select id="selectPointByUser" resultType="pointvo">
		SELECT * FROM POINTS WHERE USER_ID = #{userid}
	</select>
	
	<!-- 포인트 합계 -->
	<select id="selectTotalPointByUser" resultType="int">
		SELECT SUM(AMOUNT * IS_ADD) AS TOTAL
	    FROM POINTS
	    WHERE USER_ID = #{userid} 
	</select>
	
	<select id="selectTotalPointByCat" resultType="int">
		SELECT SUM(AMOUNT) AS CATTOTAL
		FROM POINTS
		WHERE USER_ID = #{userid} AND CAT = #{cat}
	</select>
	
	<!-- 관심목록 -->
	<select id="selectAllLikes" resultType="itemvo">
		SELECT ITEM_ID,    
				USER_ID,    
				ITEM_NAME,  
				CMT,        
				STATUS,     
				MIN_PRICE,  
				RARITY,     
				TO_CHAR(create_date, 'YYYY-MM-DD') AS CREATE_DATE,
    			TO_CHAR(end_date, 'YYYY-MM-DD') AS END_DATE,   
				TRADE_TYPE, 
				CAT,        
				IMAGE1,     
				IMAGE2,     
				IMAGE3,     
				IMAGE4,     
				IMAGE5,     
				D_CARD_ID,  
				P_CARD_ID,  
				Y_CARD_ID,  
				S_CARD_ID,  
				O_CARD_ID   
		FROM ITEMS WHERE ITEM_ID IN
								(SELECT ITEM_ID FROM LIKES WHERE USER_ID = #{userid})
	</select>
	<delete id="deleteAllLikes" parameterType="string">
		DELETE * FROM LIKES WHERE USER_ID = #{userid}
	</delete>
	
	<!-- 배송조회 -->
	<select id="selectAllDeliveries" resultType="deliveryvo">
		SELECT 
	        d.DELIVERY_ID,
	        d.TRADE_ID,
	        t.ITEM_ID,
	        TO_CHAR(t.CREATE_DATE, 'YYYY-MM-DD') AS CREATE_DATE,
	        t.USER_ID,
	        i.IMAGE1,
	        i.ITEM_NAME
	    FROM 
	        DELIVERIES d
	    INNER JOIN 
	        TRADES t
	    ON 
	        d.TRADE_ID = t.TRADE_ID
	    INNER JOIN
	    	ITEMS i
	    ON
	    	t.ITEM_ID = i.ITEM_ID
		WHERE t.USER_ID = #{userid}
	</select>
</mapper>